
#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
"""

import subprocess
import time
import sys
import os

def install_dependencies(service_dir):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"Installing dependencies for {service_dir}...")
    subprocess.run([
        sys.executable, "-m", "pip", "install", "-r", 
        os.path.join(service_dir, "requirements.txt")
    ], check=True)

def start_service(service_dir, port):
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"Starting {service_dir} on port {port}...")
    return subprocess.Popen([
        sys.executable, os.path.join(service_dir, "main.py")
    ], cwd=service_dir)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    services = [
        ("rating_service", 5001),
        ("jokes_service", 5002),
        ("api_gateway", 5000),
    ]
    
    processes = []
    
    try:
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        for service_dir, _ in services:
            if os.path.exists(service_dir):
                install_dependencies(service_dir)
        
        # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
        for service_dir, port in services:
            if os.path.exists(service_dir):
                process = start_service(service_dir, port)
                processes.append(process)
                time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
        
        print("\n" + "="*50)
        print("üöÄ –í—Å–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üì± –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:5000")
        print("üé≠ Jokes Service: http://localhost:5002/docs")
        print("‚≠ê Rating Service: http://localhost:5001/docs") 
        print("="*50)
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        for process in processes:
            process.wait()
            
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...")
        for process in processes:
            process.terminate()
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main()
